{"ast":null,"code":"var _jsxFileName = \"/Users/zygimantas/Desktop/REACT/food-store/src/components/Meals/AvailableMeals/AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../../UI/Card/Card\";\nimport MealItem from \"../MealItem/MealItem\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMealsHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://foodapp-2c7e1-default-rtdb.firebaseio.com/meals.json'); // fetch returns promise then is trigered when fetch gets response\n      const data = await response.json(); // returns object\n\n      const loadedMeals = [];\n      for (const key in data)\n      // key is an id of individual objects that we are fetching\n      {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n      setMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []); // fetch data when page is loaded\n\n  useEffect(() => {\n    fetchMealsHandler();\n  }, [fetchMealsHandler]);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this));\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailableMeals, \"Lygr36HOeUZO6txGgj2PcMQwgnI=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["classes","Card","MealItem","useCallback","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMealsHandler","response","fetch","data","json","loadedMeals","key","push","id","name","description","price","message","mealsList","map","meal","movies","length","content"],"sources":["/Users/zygimantas/Desktop/REACT/food-store/src/components/Meals/AvailableMeals/AvailableMeals.js"],"sourcesContent":["import classes from \"./AvailableMeals.module.css\";\nimport Card from \"../../UI/Card/Card\";\nimport MealItem from \"../MealItem/MealItem\";\nimport { useCallback, useEffect, useState } from \"react\";\nconst AvailableMeals = () =>\n{\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMealsHandler = useCallback(async() => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://foodapp-2c7e1-default-rtdb.firebaseio.com/meals.json'); // fetch returns promise then is trigered when fetch gets response\n      const data = await response.json(); // returns object\n\n      const loadedMeals = []; \n      for (const key in data) // key is an id of individual objects that we are fetching\n      {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []); // fetch data when page is loaded\n\n  useEffect(() => {\n    fetchMealsHandler();\n  }, [fetchMealsHandler]);\n    const mealsList = meals.map(meal =>  (\n        <MealItem \n            key={meal.id} \n            id={meal.id}    \n            name={meal.name} \n            description={meal.description} \n            price={meal.price} />));\n\n    if (movies.length > 0) {\n      content = <MoviesList movies={movies} />;\n    }\n  \n    if (error) {\n      content = <p>{error}</p>;\n    }\n  \n    if (isLoading) {\n      content = <p>Loading...</p>;\n    }\n    return(\n        <section className={classes.meals}>\n            <Card>\n                <ul>\n                    {mealsList}\n                </ul>\n            </Card>\n        </section>\n    );\n}\n\nexport default AvailableMeals;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,6BAA6B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AACzD,MAAMC,cAAc,GAAG,MACvB;EAAA;EACE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,iBAAiB,GAAGV,WAAW,CAAC,YAAW;IAC/CO,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAA8D,CAAC,CAAC,CAAC;MAC9F,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE,CAAC,CAAC;;MAEpC,MAAMC,WAAW,GAAG,EAAE;MACtB,KAAK,MAAMC,GAAG,IAAIH,IAAI;MAAE;MACxB;QACEE,WAAW,CAACE,IAAI,CAAC;UACfC,EAAE,EAAEF,GAAG;UACPG,IAAI,EAAEN,IAAI,CAACG,GAAG,CAAC,CAACG,IAAI;UACpBC,WAAW,EAAEP,IAAI,CAACG,GAAG,CAAC,CAACI,WAAW;UAClCC,KAAK,EAAER,IAAI,CAACG,GAAG,CAAC,CAACK;QACnB,CAAC,CAAC;MACJ;MAEAhB,QAAQ,CAACU,WAAW,CAAC;IAEvB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACc,OAAO,CAAC;IACzB;IAEAf,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERN,SAAS,CAAC,MAAM;IACdS,iBAAiB,EAAE;EACrB,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC;EACrB,MAAMa,SAAS,GAAGnB,KAAK,CAACoB,GAAG,CAACC,IAAI,iBAC5B,QAAC,QAAQ;IAEL,EAAE,EAAEA,IAAI,CAACP,EAAG;IACZ,IAAI,EAAEO,IAAI,CAACN,IAAK;IAChB,WAAW,EAAEM,IAAI,CAACL,WAAY;IAC9B,KAAK,EAAEK,IAAI,CAACJ;EAAM,GAJbI,IAAI,CAACP,EAAE;IAAA;IAAA;IAAA;EAAA,QAIU,CAAC;EAE/B,IAAIQ,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;IACrBC,OAAO,gBAAG,QAAC,UAAU;MAAC,MAAM,EAAEF;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAC1C;EAEA,IAAIlB,KAAK,EAAE;IACToB,OAAO,gBAAG;MAAA,UAAIpB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAC1B;EAEA,IAAIF,SAAS,EAAE;IACbsB,OAAO,gBAAG;MAAA,UAAG;IAAU;MAAA;MAAA;MAAA;IAAA,QAAI;EAC7B;EACA,oBACI;IAAS,SAAS,EAAE/B,OAAO,CAACO,KAAM;IAAA,uBAC9B,QAAC,IAAI;MAAA,uBACD;QAAA,UACKmB;MAAS;QAAA;QAAA;QAAA;MAAA;IACT;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACD;AAElB,CAAC;AAAA,GAhEKpB,cAAc;AAAA,KAAdA,cAAc;AAkEpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}