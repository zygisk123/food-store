{"ast":null,"code":"var _jsxFileName = \"/Users/zygimantas/Desktop/REACT/food-store/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport CartContext from './cart-context';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      let updatedItem;\n      updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n    if (action.type === 'REMOVE') {\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n      const existingItem = state.items[existingCartItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\n      let updatedItems;\n      if (existingItem.amount === 1) {\n        updatedItems = state.items.filter(item => item.id !== action.id);\n      } else {\n        const updtaedItem = {\n          ...existingItem,\n          amount: existingItem.amount - 1\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = upda;\n      }\n    }\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","updtaedItem","upda","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/Users/zygimantas/Desktop/REACT/food-store/src/store/CartProvider.js"],"sourcesContent":["import CartContext from './cart-context';\nimport { useReducer } from 'react';\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n};\nconst cartReducer = (state, action) => \n{\n    if (action.type === 'ADD')\n    {\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id)\n        const existingCartItem = state.items[existingCartItemIndex];\n        let updatedItems;\n        if (existingCartItem)\n        {\n            let updatedItem;\n            updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + action.item.amount\n            }\n\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIndex] = updatedItem;\n        }\n        else\n        {\n            updatedItems = state.items.concat(action.item);\n        }\n\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n        \n        if (action.type === 'REMOVE')\n        {\n            const existingCartItemIndex = state.items.findIndex(item => item.id === action.id)\n            const existingItem = state.items[existingCartItemIndex];\n            const updatedTotalAmount = state.totalAmount - existingItem.price;\n            let updatedItems;\n            if (existingItem.amount === 1)\n            {\n                updatedItems = state.items.filter(item => item.id !== action.id)\n            }\n            else\n            {\n                const updtaedItem = { ...existingItem, amount: existingItem.amount - 1};\n                updatedItems = [...state.items];\n                updatedItems[existingCartItemIndex] = upda\n            }\n        }\n    }\n\n    return defaultCartState;\n}\n\nconst CartProvider = props => \n{\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = (item) =>\n    {\n        dispatchCartAction({type: 'ADD', item: item});\n    }\n\n    const removeItemFromCartHandler = id =>\n    {\n        dispatchCartAction({type: 'REMOVE', id: id});\n    }\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n    return <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>\n}\n\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}